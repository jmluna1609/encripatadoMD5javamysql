/*
**Muestra el modelo de impresion para la comanda 
*/
package Vista_Ventas;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.MediaSizeName;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.table.DefaultTableModel;

public class ImprimirComanda extends javax.swing.JFrame implements Printable {

    public ImprimirComanda() {
        
        this.setResizable(false); //Quitar el maximizar y ampliar pantalla
        this.setLocationRelativeTo(null); //LA PANTALLA ESTARA EN EL CENTRO
        initComponents();
        diseño_comanda();
        
          }
   /* public void agregadatosPedidos(int cantidad, String descripcion, 
            double subtotal, double total, String fecha, int comanda, String tipo) {

        pedidos[0] = "" + cantidad;
        pedidos[1] = "" + descripcion;
        pedidos[2] = "" + subtotal;

        System.out.println("cantidad: " + cantidad + " Descripcion: " + descripcion
                + " subtotal: " + subtotal);
        
       // textAreaPedido.setText(modelo1.getDataVector().toString().toUpperCase() + "\n");

        //textAreaPedido.setText(modelo1.getDataVector().toString().toUpperCase() + "\n");

    }
    */
     /*diseño para imprimir*/
    public void diseño_comanda(){
        VentanaPrincipalVentas ventanaPrincipal = new VentanaPrincipalVentas();
        int com = ventanaPrincipal.comanda; 
        String pedido = ventanaPrincipal.para;
        double totalPrecio= ventanaPrincipal.totalbs;
         txtComanda.setText("   *CAFETERÍA ITALY* \n");
         //Obtengo el tiempo 
        Date dd = new Date();
        SimpleDateFormat datef = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat timef = new SimpleDateFormat("hh:mm:ss");
        String date = datef.format(dd);
        String time = timef.format(dd);
         txtComanda.setText(txtComanda.getText()+"FECHA: "+date+" - "+time+"\n");
         txtComanda.setText(txtComanda.getText()+"COMANDA: "+com+"\n");
         txtComanda.setText(txtComanda.getText()+"PARA: "+pedido+"\n");
         txtComanda.setText(txtComanda.getText()+"--------------------------------\n");
         txtComanda.setText(txtComanda.getText()+" CANT.     DETALLE    PRECIO \n");
         txtComanda.setText(txtComanda.getText()+"--------------------------------\n");
        //agregamos el jtable de los productos
        DefaultTableModel modeloTablaPedido = (DefaultTableModel) ventanaPrincipal.tablaPedido.getModel();
        int filas = ventanaPrincipal.tablaPedido.getRowCount();
        System.out.println("filas "+ filas);
        for (int i =0; i< filas; i++)
        {
            System.out.println("for de los pedidos para imprimir");
            String cantidad= modeloTablaPedido.getValueAt(i, 2).toString(); // cantidad
            String detalle = modeloTablaPedido.getValueAt(i, 3).toString(); //item
            String precio = modeloTablaPedido.getValueAt(i, 4).toString(); // cal price
           
          txtComanda.setText(txtComanda.getText()+" "+cantidad+"X"+detalle.toUpperCase()+"\t"+".Bs."+precio+"\n");
        }
        txtComanda.setText(txtComanda.getText()+"--------------------------------\n");
        txtComanda.setText(txtComanda.getText()+"Total:"+"\t"+"Bs."+totalPrecio+"\n");
        txtComanda.setText(txtComanda.getText()+"--------------------------------\n");
        
    }
   
    
    
 /*
    aqui vamos a usar para poder imprimir
     */
    @Override
    public int print(Graphics graf, PageFormat pageFor, int index) throws PrinterException {
        if (index > 0) {
            //aqui es para que solo la primera pagina se imprime
            return NO_SUCH_PAGE;
        }
        //aqui vamos a definir lo que vamos a imprimir 
        //vamos a imprimir solo el JPanel que se llama panelModelo Comanda
        Graphics2D hub = (Graphics2D) graf;
        //tamaño del marco se le da un formato a la pagina
        hub.translate(pageFor.getImageableX() + 0, pageFor.getImageableY() + 0);
        //escala de pagina En este caso se va a imprimir el tmaaño lo q 
        //he diseñado mi Jpanel
        hub.scale(1.0, 1.0);

        txtComanda.print(graf);
        return PAGE_EXISTS;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImprimir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComanda = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        txtComanda.setBackground(new java.awt.Color(255, 255, 255));
        txtComanda.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        txtComanda.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(txtComanda);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnImprimir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnImprimir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        //Vamos a imprimir la comanda
        try {
            
            PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();
            aset.add(OrientationRequested.PORTRAIT);
            aset.add(MediaSizeName.INVOICE);
            // job.print( aset);
            PrinterJob imprimir = PrinterJob.getPrinterJob();
            imprimir.setPrintable(this);
            boolean top = imprimir.printDialog();
            if (top) {
                imprimir.print(aset);
            }
        } catch (PrinterException e) {
            System.out.println("ERROR AL IMPRIMIR " + e);
        }
        dispose();
    }//GEN-LAST:event_btnImprimirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane txtComanda;
    // End of variables declaration//GEN-END:variables

   
}
